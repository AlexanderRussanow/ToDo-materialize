{"version":3,"sources":["reportWebVitals.ts","components/AboutPage.tsx","components/navbar.tsx","components/toDoForm.tsx","components/TodoList.tsx","components/TodoPages.tsx","App-new.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","AboutPage","history","useHistory","Fragment","className","onClick","push","Navbar","href","to","TodoForm","props","ref","useRef","onKeyPress","event","key","onAdd","current","value","type","id","placeholder","htmlFor","TodoList","todos","onRemove","onToggle","length","map","todo","classes","completed","join","checked","onChange","bind","title","preventDefault","removeHandler","TodoPage","useState","setTodos","useEffect","saved","JSON","parse","localStorage","getItem","setItem","stringify","newTodo","Date","now","prev","confirm","filter","AppNew","component","path","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wKAceA,G,MAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,qBCNDQ,EAAsB,WACnC,IAAMC,EAAUC,cAEZ,OACI,eAAC,IAAMC,SAAP,WACI,kDACA,wBAAQC,UAAU,MAAMC,QAAS,kBAAMJ,EAAQK,KAAK,MAApD,kCACA,6KCNCC,EAAmB,WAC5B,OACI,8BACA,sBAAKH,UAAU,kCAAf,UACE,mBAAGI,KAAK,IAAIJ,UAAU,aAAtB,wBACA,qBAAIA,UAAU,6BAAd,UACE,6BAAI,cAAC,IAAD,CAASK,GAAG,IAAZ,0BACJ,6BAAI,cAAC,IAAD,CAASA,GAAG,SAAZ,oC,gBCJHC,EAAoC,SAACC,GAEhD,IAAMC,EAAMC,iBAAyB,MASrC,OACE,sBAAKT,UAAU,kBAAf,UACE,uBACEQ,IAAKA,EACLE,WAXkB,SAACC,GACL,UAAdA,EAAMC,MACVL,EAAMM,MAAML,EAAIM,QAASC,OACzBP,EAAIM,QAASC,MAAQ,KASjBC,KAAK,OACLC,GAAG,QACHC,YAAY,yBAEd,uBAAOC,QAAQ,QAAQnB,UAAU,SAAjC,sCClBOoB,EAAwC,SAAC,GAI/C,IAHLC,EAGI,EAHJA,MACAC,EAEI,EAFJA,SACAC,EACI,EADJA,SAEA,GAAqB,IAAjBF,EAAMG,OACR,OAAO,mBAAGxB,UAAU,SAAb,6BAOT,OACE,6BACGqB,EAAMI,KAAI,SAACC,GACV,IAAMC,EAAU,CAAC,QAIjB,OAHID,EAAKE,WACPD,EAAQzB,KAAK,aAGb,oBAAIF,UAAW2B,EAAQE,KAAK,KAA5B,SACE,kCACE,uBACEb,KAAK,WACLc,QAASJ,EAAKE,UACdG,SAAUR,EAASS,KAAK,KAAMN,EAAKT,MAErC,+BAAOS,EAAKO,QACZ,mBACEjC,UAAU,0BACVC,QAAS,SAACU,GAAD,OAvBD,SAACA,EAAyBM,GAC9CN,EAAMuB,iBACNZ,EAASL,GAqBuBkB,CAAcxB,EAAOe,EAAKT,KAFhD,wBARmCS,EAAKT,UCvBzCmB,EAAqB,WAAO,IAAD,EACZC,mBAAkB,IADN,mBAC/BhB,EAD+B,KACxBiB,EADwB,KAGtCC,qBAAU,WACR,IAAMC,EAAQC,KAAKC,MAAMC,aAAaC,QAAQ,UAAY,MAC1DN,EAASE,KACR,IAEHD,qBAAU,WACRI,aAAaE,QAAQ,QAASJ,KAAKK,UAAUzB,MAC5C,CAACA,IA6BJ,OACE,eAAC,IAAMtB,SAAP,WACE,cAAC,EAAD,CAAUc,MA7BK,SAACoB,GAClB,IAAMc,EAAiB,CACrBd,MAAOA,EACPhB,GAAI+B,KAAKC,MACTrB,WAAW,GAEbU,GAAS,SAACY,GAAD,OAAWH,GAAX,mBAAuBG,UAwB9B,cAAC,EAAD,CACE7B,MAAOA,EACPE,SAvBgB,SAACN,GACrBqB,GAAS,SAACY,GAAD,OACPA,EAAKzB,KAAI,SAACC,GAIR,OAHIA,EAAKT,KAAOA,IACdS,EAAKE,WAAaF,EAAKE,WAElBF,SAkBPJ,SAbgB,SAACL,GACDkC,QAAQ,+BAE1Bb,GAAS,SAACY,GAAD,OAAUA,EAAKE,QAAO,SAAC1B,GAAD,OAAUA,EAAKT,KAAOA,eCnB5CoC,EAfU,WAEvB,OACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,qBAAKrD,UAAU,YAAf,SACE,eAAC,IAAD,WACI,cAAC,IAAD,CAAOsD,UAAWlB,EAAUmB,KAAK,IAAIC,OAAK,IAC1C,cAAC,IAAD,CAAOF,UAAW1D,EAAW2D,KAAK,oBCT9CE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1B1E,M","file":"static/js/main.a2347773.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport {useHistory} from 'react-router-dom'\n\nexport const AboutPage: React.FC = () => {\nconst history = useHistory()\n\n    return (\n        <React.Fragment>\n            <h1>Information Page</h1>\n            <button className='btn' onClick={() => history.push('/')}>Backto the main page</button>\n            <p>Lorem, ipsum dolor sit amet consectetur adipisicing elit. Soluta in a beatae, deleniti ad eligendi architecto pariatur nisi laborum hic.</p>\n        </React.Fragment>\n    )\n}","import React from 'react'\nimport {NavLink} from 'react-router-dom'\n\n\nexport const Navbar: React.FC = () => {\n    return (\n        <nav>\n        <div className=\"nav-wrapper purple accent-2 px1\">\n          <a href=\"/\" className=\"brand-logo\">React + TS</a>\n          <ul className=\"right hide-on-med-and-down\">\n            <li><NavLink to=\"/\">To-do list</NavLink></li>\n            <li><NavLink to=\"/about\">Information</NavLink></li>\n          </ul>\n        </div>\n      </nav>\n            \n    )\n}\n\n// export default Navbar","import React, { useState, useRef } from \"react\";\n\n\ninterface TodoFormProps {\n    onAdd(title: string): void\n}\n\nexport const TodoForm: React.FC<TodoFormProps> = (props) => {\n\n  const ref = useRef<HTMLInputElement>(null);\n\n  const keyPressHandler = (event: React.KeyboardEvent) => {\n    if (event.key === \"Enter\") {\n    props.onAdd(ref.current!.value)\n    ref.current!.value = \"\";\n    }\n  };\n\n  return (\n    <div className=\"input-field mt2\">\n      <input\n        ref={ref}\n        onKeyPress={keyPressHandler}\n        type=\"text\"\n        id=\"title\"\n        placeholder=\"Enter your task here\"\n      />\n      <label htmlFor=\"title\" className=\"active\">\n        Enter your task here\n      </label>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { ITodo } from \"../iterfaces\";\n\ntype TodoListPropsType = {\n  todos: ITodo[];\n  onToggle(id: number): void;\n  onRemove: (id: number) => void;\n};\n\nexport const TodoList: React.FC<TodoListPropsType> = ({\n  todos,\n  onRemove,\n  onToggle,\n}) => {\n  if (todos.length === 0) {\n    return <p className=\"center\">Evrything clear</p>;\n  }\n  const removeHandler = (event: React.MouseEvent, id: number) => {\n    event.preventDefault();\n    onRemove(id);\n  };\n\n  return (\n    <ul>\n      {todos.map((todo) => {\n        const classes = [\"todo\"];\n        if (todo.completed) {\n          classes.push(\"completed\");\n        }\n        return (\n          <li className={classes.join(\" \")} key={todo.id}>\n            <label>\n              <input\n                type=\"checkbox\"\n                checked={todo.completed}\n                onChange={onToggle.bind(null, todo.id)}\n              />\n              <span>{todo.title}</span>\n              <i\n                className=\"material-icons red-text\"\n                onClick={(event) => removeHandler(event, todo.id)}\n              >\n                delete\n              </i>\n            </label>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { TodoForm } from \"../components/toDoForm\";\nimport { TodoList } from \"../components/TodoList\";\nimport { ITodo } from \"../iterfaces\";\n\ndeclare var confirm: (question: string) => boolean;\n\nexport const TodoPage: React.FC = () => {\n  const [todos, setTodos] = useState<ITodo[]>([]);\n\n  useEffect(() => {\n    const saved = JSON.parse(localStorage.getItem(\"todos\") || \"[]\") as ITodo[];\n    setTodos(saved);\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  }, [todos]);\n\n  const addHandler = (title: string) => {\n    const newTodo: ITodo = {\n      title: title,\n      id: Date.now(),\n      completed: false,\n    };\n    setTodos((prev) => [newTodo, ...prev]);\n  };\n\n  const toggleHandler = (id: number) => {\n    setTodos((prev) =>\n      prev.map((todo) => {\n        if (todo.id === id) {\n          todo.completed = !todo.completed;\n        }\n        return todo;\n      })\n    );\n  };\n\n  const removeHandler = (id: number) => {\n    const shoudRemove = confirm(\"You want to delet element?\");\n    if (shoudRemove) {\n      setTodos((prev) => prev.filter((todo) => todo.id !== id));\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <TodoForm onAdd={addHandler} />\n      <TodoList\n        todos={todos}\n        onToggle={toggleHandler}\n        onRemove={removeHandler}\n      />\n    </React.Fragment>\n  );\n};\n","import React from \"react\";\nimport { BrowserRouter, Switch, Route} from 'react-router-dom'\nimport { AboutPage } from \"./components/AboutPage\";\nimport { Navbar } from \"./components/navbar\";\nimport { TodoPage } from \"./components/TodoPages\";\n\n\n\nconst AppNew: React.FC = () => {\n  \n  return (\n    <BrowserRouter>\n      <Navbar />\n      <div className=\"container\">\n        <Switch>\n            <Route component={TodoPage} path='/' exact/>\n            <Route component={AboutPage} path='/about'/>\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n};\n\nexport default AppNew;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport AppNew from './App-new';\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppNew />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}